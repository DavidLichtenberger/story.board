= simple_form_for([@report, text_component]) do |f|
  = f.error_notification

  .form-inputs

    .row
      .col-sm-12
        = f.input :publication_status, collection: TextComponent.publication_statuses.keys.to_a, label: 'Publication Status', placeholder: 'Select a status...'

    = f.association :report, collection: Report.order('name'), selected: @report.id
    .row
      .col-sm-12
        #triggers
          - if local_assigns[:create_trigger]
            = f.simple_fields_for :triggers do |trigger|
              = render 'triggers/trigger_fields', f: trigger, is_sub_form: true
          - else
            = f.association :triggers, collection: Trigger.order('name'), label_method: :name, input_html: {'class' => 'selectpicker', 'data-live-search' => "true", 'title' => '...choose a trigger'}

    .row
      .col-sm-12
        = f.association :assignee, collection: User.order('LOWER(name)'), label_method: :name, input_html: {'title' => '...choose an assignee'}
    .row
      .col-sm-12
        #topic
          = f.association :topic, collection: Topic.order('name'), label_method: :name, input_html: {'class' => 'selectpicker', 'data-live-search' => "true", 'title' => '...choose a topic'}

    .row
      .col-sm-6
        = f.input :from_day
      .col-sm-6
        = f.input :to_day

    %h2 Text
    %p.help Please write the text here. To add dynamic fields, like temperature values via toolbar.
    .text-editor
      .text-editor__toolbar
        %ul.list-inline
          %li.dropdown
            .text-editor__toolbar__item.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
              Sensors
              %span.caret{"aria-hidden" => "true"}
            %ul.dropdown-menu
              - @sensors.each do |sensor|
                %li
                  %a{:href => "#", :data => {"editor" => {"markup-command" => "text", "markup-text" => "{value(#{sensor.id})}"}}}
                    = sensor.name
          %li.dropdown
            .text-editor__toolbar__item.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
              Events
              %span.caret{"aria-hidden" => "true"}
            %ul.dropdown-menu.text-editor__toolbar__dropdown__menu
              - @events.each do |event|
                %li
                  %a{:href => "#", :data => {"editor" => {"markup-command" => "text", "markup-text" => "{date(#{event.id})}"}}}
                    = event.name
      .seamless-textarea.text-component-input-fields
        = f.input :heading, as: :text, :placeholder => 'Title', :label => false, :input_html => { :class => 'text-editor__field'}
        = f.input :introduction, as: :text, :placeholder => 'Introduction', :label => false, :input_html => { :class => ['text-editor__field', 'introduction'] }
        = f.input :main_part, as: :text, :placeholder => 'Main part', :label => false, :input_html => { :rows => 10, :class => 'text-editor__field' }
        = f.input :closing, as: :text, :placeholder => 'Closing', :label => false, :input_html => { :class => 'text-editor__field'}
      %h2 Questions/Answers for Chatfuel
      .container-fluid
        = f.simple_fields_for :question_answers do |question_answer|
          = render 'question_answers/fields', f: question_answer
        .links
          .row
            = link_to_add_association button_tag("Add a question and an answer", type: 'button', class: 'btn btn-primary'), f, :question_answers, partial: 'question_answers/fields.html.haml'
    .row
      .col-sm-12
        %h2 Output
        #channels
          = f.association :channels, collection: Channel.order('name')
  .form-actions
    = f.button :submit
