= simple_form_for([@report, text_component]) do |f|
  = f.error_notification

  .form

    /.tab-content
    %div


      /.tab-pane.textComponent-form-step1.active
      %div

        .form__section
          %h4.step
            .step__counter 1
            General Information

          .form-group
            = f.association :report, collection: Report.order('name'), selected: @report.id

          .form-group
            = f.input :publication_status, collection: TextComponent.publication_statuses.keys.to_a, label: 'Publication Status'    

          .form-group
            = f.association :assignee, collection: User.order('LOWER(name)'), label_method: :name

          .form-group
            .d-flex
              -# %a.btn.btn-secondary{data: {toggle: 'form-section', target: 'prev'}, href: '#'} Previous Step
              %a.btn.btn-primary.ml-auto{data: {toggle: 'form-section', target: 'next'}, href: '#'} Continue


      /.tab-pane.textComponent-form-step2
      %div
          
        .form__section
          %h4.step
            .step__counter 2
            Trigger

          - if local_assigns[:create_trigger]
            = f.simple_fields_for :triggers do |trigger|
              = render 'triggers/trigger_fields', f: trigger, is_sub_form: true
          - else
            = f.association :triggers, collection: Trigger.order('name'), label_method: :name


        .form__section
          = f.association :topic, collection: Topic.order('name'), label_method: :name


        .form__section
          .row
            .col
              = f.input :from_day
            .col
              = f.input :to_day


      /.tab-pane.textComponent-form-step3
      %div

        .form__section
          %h4.step
            .step__counter 3
            Text

        .text-editor
          .text-editor__toolbar
            %select.custom-select
              %option{:disabled => true, :selected => true} Sensors
              - @sensors.each do |sensor|
                %option{:data => {"editor" => {"markup-command" => "text", "markup-text" => "{value(#{sensor.id})}"}}}
                  = sensor.name

            %select.custom-select
              %option{:disabled => true, :selected => true} Events
              - @events.each do |event|
                %option{:data => {"editor" => {"markup-command" => "text", "markup-text" => "{date(#{event.id})}"}}}
                  = event.name
          
          .form__section
            %h5 Article

            = f.input :heading, as: :text, :placeholder => 'Title', :label => 'Title', :input_html => { :class => 'text-editor__field'}
            = f.input :introduction, as: :text, :placeholder => 'Introduction', :label => 'Introduction', :input_html => { :class => ['text-editor__field', 'introduction'] }
            = f.input :main_part, as: :text, :placeholder => 'Main Part', :label => 'Main Part', :input_html => { :rows => 10, :class => 'text-editor__field' }
            = f.input :closing, as: :text, :placeholder => 'Closing', :label => 'Closing', :input_html => { :class => 'text-editor__field'}
          

          .form__section
            %h5 Questions/Answers for Chatfuel
            %div
              = f.simple_fields_for :question_answers do |question_answer|
                = render 'question_answers/fields', f: question_answer
              .links
                = link_to_add_association button_tag("Add Question & Answer", type: 'button', class: 'btn btn-secondary'), f, :question_answers, partial: 'question_answers/fields.html.haml'


        /.tab-pane.textComponent-form-step4
        %div

          .form__section
            %h4.step
              .step__counter 4
              Output

            = f.association :channels, collection: Channel.order('name')


          .form__section
            .form-actions
              = f.button :submit, class: 'btn btn-submit'
