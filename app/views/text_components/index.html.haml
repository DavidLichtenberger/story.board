- if @text_component.errors.any?
  - @text_component.errors.full_messages.each do |message|
    .alert.alert-danger= message

- @text_components.each do |text_component|
  = render 'edit_modal', text_component: text_component

#modalTriggerText.modal.fade{"aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog{:role => "document"}
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} Ã—
        %div
          / Nav tabs
          %ul.nav.nav-tabs{:role => "tablist"}
            %li{:role => "presentation"}
              %a{"aria-controls" => "use", "data-toggle" => "tab", :href => "#use", :role => "tab"} Use Trigger
            %li.active{:role => "presentation"}
              %a{"aria-controls" => "create", "data-toggle" => "tab", :href => "#create", :role => "tab"} Create with new Trigger
      .modal-body
        / Tab panes
        .tab-content
          #use.tab-pane{:role => "tabpanel"}
            / Modal 1
            .modal-inner
              .row
                .col-sm-12
                  %h2 New text component
                  %div.help Use an existing trigger
              .row
                .col-sm-12
                  = render 'form', text_component: @new_text_component
          #create.tab-pane.active{:role => "tabpanel"}
            / Modal 2
            .modal-inner
              .row
                .col-sm-12
                  = render 'form', text_component: @new_text_component, create_trigger: true

.row
  .col-sm-12
    %h1 Text components

- if user_signed_in?
  .row
    .col-sm-12
      %button.btn.btn-primary.btn-lg.pull-right{"data-target" => "#modalTriggerText", "data-toggle" => "modal", :type => "button"}
        Create new text component
.row
  .col-sm-12
    = form_tag(text_components_path, {method: :get}) do
      .form-group
        = label :filter, :assignee_id, 'By assignee', class: 'col-2 col-form-label'
        = collection_select(:filter, :assignee_id, User.all, :id, :name, {include_blank: true, selected: @filter[:assignee_id]}, {'class' => 'selectpicker', 'title' => '...choose a user'})
      = submit_tag 'Filter', class: 'col-2 btn btn-primary btn-lg pull-right'
.row
  .col-sm-12
    %table.table.table-striped.table-hover.text-components-table
      %thead
        %tr
          %th Heading
          %th From day
          %th To day
          %th
          %th
          %th
      %tbody
        - @trigger_groups.each do |trigger_names, text_components|
          %tr
            %td{colspan: 6}
              %strong= trigger_names
          - text_components.each do |text_component|
            = render 'text_component_row', text_component: text_component
        - if @text_components_without_triggers
          %tr
            %td{colspan: 6}
              %strong Text components without triggers
          - @text_components_without_triggers.each do |text_component|
            = render 'text_component_row', text_component: text_component

- if user_signed_in?
  .row
    .col-sm-12
      %button.btn.btn-primary.btn-lg.pull-right{"data-target" => "#modalTriggerText", "data-toggle" => "modal", :type => "button"}
        Create new text component
